variables:
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - lint
  - test
  - build
  - build image
  - deploy

lint:
  image: node:lts
  stage: lint
  needs: []
  cache:
    paths:
      - node_modules
  script:
    - npm install --progress=false
    - VUE_APP_ENV=dev npm run lint


test:
  image: node:lts
  stage: test
  needs: []
  cache:
    paths:
      - node_modules
  script:
    - npm install --progress=false
    - VUE_APP_ENV=dev npm run test:unit

build:
  image: node:lts
  stage: build
  needs: []
  cache:
    paths:
      - node_modules
  script:
    - npm install --progress=false
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist


build image:
  stage: build image
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  environment:
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" 
  script:
    - docker pull $IMAGE || true
    - docker build --cache-from $IMAGE -t $IMAGE .
    - docker push $IMAGE

deploy staging:
  image: docker:latest
  stage: deploy
  needs:
    - job: build image
      artifacts: false
  only:
    refs:
      - master
  environment:
    name: stag
    url: https://stag.portal.cct-ev.de
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@stag.api.cct-ev.de'
    DOMAIN: stag.portal.cct-ev.de
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" 
  before_script:
    - "which ssh-agent || ( apk update && apk add openssh-client )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - COMPOSE_PROJECT_NAME=portal-$CI_ENVIRONMENT_SLUG docker-compose -f docker-compose.stag.yml pull
    - COMPOSE_PROJECT_NAME=portal-$CI_ENVIRONMENT_SLUG docker-compose -f docker-compose.stag.yml up -d


deploy production:
  image: docker:latest
  stage: deploy
  needs:
    - job: build image
      artifacts: false
  only:
    - tags
  environment:
    name: prod
    url: https://portal.cct-ev.de
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.cct-ev.de'
    DOMAIN: portal.cct-ev.de
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" 
  before_script:
    - "which ssh-agent || ( apk update && apk add openssh-client )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - COMPOSE_PROJECT_NAME=portal-$CI_ENVIRONMENT_SLUG docker-compose pull
    - COMPOSE_PROJECT_NAME=portal-$CI_ENVIRONMENT_SLUG docker-compose up -d

