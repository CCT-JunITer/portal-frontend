variables:
  DOCKER_TLS_CERTDIR: "/certs"
  BASE_DOMAIN: cct-ev.de
  STACK_NAME: portal-frontend-$CI_ENVIRONMENT_SLUG
 


.install-ssh: &install-ssh
  - "which ssh-agent || ( apk update && apk add openssh-client )"
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

.docker-stack-run: &docker-stack-run
  - docker stack deploy -c docker-compose.yml --prune --resolve-image always --with-registry-auth $STACK_NAME
.docker-stack-stop: &docker-stack-stop
  - docker stack rm $STACK_NAME


stages:
  - lint
  - test
  - build
  - deploy

lint:
  image: node:18
  stage: lint
  needs: []
  cache:
    paths:
      - node_modules
  script:
    - npm install --progress=false
    - VUE_APP_ENV=dev npm run lint
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_REF_PROTECTED == "true"



test:
  image: mcr.microsoft.com/playwright:v1.48.1-noble
  stage: test
  cache:
    paths:
      - node_modules
  script:
    - npm ci
    - VUE_APP_ENV=dev npm run test
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_REF_PROTECTED == "true"


build:
  stage: build
  image: docker@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90
  services:
    - docker:dind@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  script:
    - |
      cat <<EOF >.env
      VUE_APP_GITLAB_TOKEN=$GITLAB_PRIVATE_TOKEN
      EOF
    - docker pull $IMAGE || true
    - docker build --cache-from $IMAGE -t $IMAGE .
    - docker push $IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_REF_PROTECTED == "true"



deploy stag: 
  extends: 
    - .deploy base
  environment:
    name: stag
    url: https://portal.stag.$BASE_DOMAIN
    on_stop: stop stag
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.stag.${BASE_DOMAIN}:23'
    DOMAIN: "portal.stag.${BASE_DOMAIN}"
  only: 
    - master

stop stag:
  only:
    - master
  extends: 
    - .stop base
  environment:
    name: stag
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.stag.${BASE_DOMAIN}:23'
    DOMAIN: "portal.stag.${BASE_DOMAIN}"

deploy review: 
  extends: 
    - .deploy base
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.portal.stag.$BASE_DOMAIN
    on_stop: stop review
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.stag.${BASE_DOMAIN}:23'
    DOMAIN: "$CI_ENVIRONMENT_SLUG.portal.stag.${BASE_DOMAIN}"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'


stop review:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  extends: 
    - .stop base
  environment:
    name: review/$CI_COMMIT_REF_NAME
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.stag.${BASE_DOMAIN}:23'
    DOMAIN: "$CI_ENVIRONMENT_SLUG.portal.stag.${BASE_DOMAIN}"

deploy production:
  image: docker@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90
  stage: deploy
  needs: 
    - job: build
      artifacts: false
  only: 
    - tags
  environment:
    name: prod
    url: https://portal.$BASE_DOMAIN
    on_stop: stop production
  extends: 
    - .deploy base
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.${BASE_DOMAIN}:23'
    DOMAIN: "portal.${BASE_DOMAIN}"
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"


stop production:
  only:
    - tags
  extends: 
    - .stop base
  environment:
    name: prod
  variables:
    DOCKER_HOST: 'ssh://gitlab-ci@portal.${BASE_DOMAIN}:23'
    DOMAIN: "portal.${BASE_DOMAIN}"



# templates

.deploy base:
  image: docker@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90
  stage: deploy
  needs: 
    - job: build
      artifacts: false
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$BASE_DOMAIN
    on_stop: stop review
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  before_script:
    - *install-ssh
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - *docker-stack-run

.stop base:
  image: docker@sha256:c8bb6fa5388b56304dd770c4bc0478de81ce18540173b1a589178c0d31bfce90
  stage: deploy
  needs: 
    - job: build
      artifacts: false
  environment:
    action: stop
  when: manual
  variables:
    IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  before_script:
    - *install-ssh
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - *docker-stack-stop

